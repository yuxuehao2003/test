<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nowcoder.community.dao.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>


    <insert id="insertMessage" keyProperty="id">
        insert into  message(<include refid="insertFields"></include>)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>


    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!--    // 查询当前用户的会话列表，针对每一个会话只返回一条最新的私信 -->
    <select id="selectConversations" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"/>
        from `message`
        where id in(
        SELECT MAX(id) FROM `message`
            where `status` != 2
              and from_id != 1
            and from_id = #{userId} or to_id = #{userId}
            GROUP BY conversation_id
            )
        order by id desc
        limit #{offset}, #{limit}
    </select>

<!--    // 查询当前用户的会话数量-->
    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(m.maxid) from(
        select max(id) as maxid from message
        where `status` != 2
        and from_id != 1
        and from_id = #{userId} or to_id = #{userId}
        GROUP BY conversation_id
        ) as m
    </select>

<!--    // 查询某个会话所包含的私信列表-->
    <select id="selectLetters" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"/>
        from `message`
        where conversation_id = #{conversationId}
        and status != 2
        and from_id != 1
        order by id desc
        limit #{offset}, #{limit}
    </select>

<!--    // 查询某个会话所包含的私信数量-->
    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(id) from message
        where conversation_id = #{conversationId}
        and status!= 2
        and from_id!= 1
    </select>

<!--    // 查询未读私信数量 实现2种业务，1.查询某个用户下的私信数量 2.查询某个会话下未读私信数量-->
    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id) from message
        where status = 0
        and from_id!= 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>
</mapper>
